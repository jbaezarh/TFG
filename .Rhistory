mutate(Valor=as.integer(round(Valor))) # Por algún motivo aparecen decimales
municipios <- esp_get_munic(epsg = 4258,region = "Andalucía")
municipios <- municipios |>
st_transform(crs_reference)
num_mun = st_intersects(dataset,municipios)
# Problema en la observación 5129 y 5219, sale de
which(sapply(num_mun,function(x) length(x) == 0))
dataset[-which(sapply(num_mun,function(x) length(x) == 0)),]
# Problema en la observación 5129 y 5219, sale de
which(sapply(num_mun,function(x) length(x) == 0))
dataset
which(sapply(num_mun,function(x) length(x) == 0))
dataset[-which(sapply(num_mun,function(x) length(x) == 0)),]
any(sapply(num_mun,function(x) length(x) == 0))
which(sapply(num_mun,function(x) length(x) == 0)))
which(sapply(num_mun,function(x) length(x) == 0))
# Las eliminamos:
if (any(sapply(num_mun,function(x) length(x) == 0))) {
cat("Eliminamos las observaciones:\n",which(sapply(num_mun,function(x) length(x) == 0)))
dataset = dataset[-which(sapply(num_mun,function(x) length(x) == 0)),]
}
dataset$cod_municipio <- municipios[unlist(st_intersects(dataset,municipios)),]$LAU_CODE
dataset <- dataset |>
left_join(select(poblacion,c(-Medida)),
join_by(cod_municipio==CODIGO_INE3,YEAR==Anual)) |>
rename("poblacion" = Valor,
"municipio" = `Lugar de residencia`)
dataset
UsoSuelo_rast <- rast("data_cleaning/uso_suelo_rast.tiff")
dataset$uso_suelo = terra::extract(UsoSuelo_rast,dataset)[,2]
save(dataset,paste0("salidas_intermedias/dataset_clim_antr",Sys.Date(),".RData"))
save(dataset,file = paste0("salidas_intermedias/dataset_clim_antr",Sys.Date(),".RData"))
# Distancia a ríos
rios <- read_sf("data_raw/hidrograficas/Rios_Espana.shp") |>
st_transform(st_crs(dataset)) |>
st_crop(xmin = 100394.4, # Esto se hace solo para no tener que considerar todo el file y que sea más manipulable
ymin = 3976888.6,
xmax = 690000.8,
ymax = 4350000.0) |>
st_union()
dataset$dist_rios <- st_distance(dataset,rios) |>
as.numeric() # metres
rm(rios)
dataset$NDVI = NA
for (YEAR in 2000:2022) {
for (MONTH in 1:12) {
MM = str_pad(MONTH,2,"left",pad = "0")
YY = substr(as.character(YEAR),3,4)
# if (as.numeric(YY)<=01) {
#   ruta <- paste0("data_raw/vegetacion/",YEAR,"NOAAVHMEDMNDVI/InfGeografica/InfRaster/TIF/NOAAVH_",YY,MM,"01_Andaluz_MEDMndvi.tif")
# } else
if (as.numeric(YY)<=06) {
ruta <- paste0("data_raw/vegetacion/",YEAR,"TERMODMEDMNDVI/InfGeografica/InfRaster/TIFF/TERMOD_",YY,MM,"01_h17v05_medmndvi.tif")
} else if (as.numeric(YY)<=11) {
ruta <- paste0("data_raw/vegetacion/",YEAR,"TERMODMEDMNDVI/InfGeografica/InfRaster/TIF/TERMOD_",YY,MM,"01_h17v05_medmndvi.tif")
} else if (as.numeric(YY)<=21) {
ruta <- paste0("data_raw/vegetacion/",YEAR,"TERMODMEDMNDVI/InfGeografica/InfRaster/TIFF/termod_",YY,MM,"01_h17v05_medmndvi.tif")
}else {
ruta <- paste0("data_raw/vegetacion/",YEAR,"TERMODMEDMNDVI/InfGeografica/InfRaster/COG/termod_",YY,MM,"01_h17v05_medmndvi_COG.tif")
}
if (file.exists(ruta)) {
cat(YEAR,MONTH,"\n")
# Observaciones en ese mes y año
isMY = dataset$YEAR==YEAR & dataset$MM==MONTH
if (any(isMY)) {
NDVI_rast = as.numeric(rast(ruta))
if (MONTH==4 & YEAR==2011){
# Ese archivo viene defectuoso y le asigno el CRS de otros archivos del mismo año (todos los demás del año tienen el mismo)
crs(NDVI_rast) = "PROJCRS[\"WGS 84 / UTM zone 30N\",\n    BASEGEOGCRS[\"WGS 84\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4326]],\n    CONVERSION[\"UTM zone 30N\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",-3,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",0.9996,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",500000,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Navigation and medium accuracy spatial referencing.\"],\n        AREA[\"Between 6°W and 0°W, northern hemisphere between equator and 84°N, onshore and offshore. Algeria. Burkina Faso. Côte' Ivoire (Ivory Coast). Faroe Islands - offshore. France. Ghana. Gibraltar. Ireland - offshore Irish Sea. Mali. Mauritania. Morocco. Spain. United Kingdom (UK).\"],\n        BBOX[0,-6,84,0]],\n    ID[\"EPSG\",32630]]"
}
dataset[isMY,]$NDVI = terra::extract(NDVI_rast,dataset[isMY,])[,2]
}
} else
cat("No existe: ",YEAR,"-",MONTH,"\n")
}
}
# Prueba rápida test train random
dataset = drop_na(dataset)
dataset$enp = as.numeric(dataset$enp)
n = nrow(dataset)
train_ind = sample(1:n,0.75*n)
test_ind=setdiff(1:n,train_ind)
train = st_drop_geometry(dataset)[train_ind,-c(2,3,4,5,24,25)]
test = st_drop_geometry(dataset)[test_ind,-c(2,3,4,5,24,25)]
heatmap(cor(train))
max(cor(train)-diag(as.matrix(train)))
reg <- glm(fire ~ . , data = train, family = "binomial")
# CRS de referencia
pend <- rast("data_raw/topograficas/pendiente.tif")
crs_reference = crs(pend)
rm(pend)
# Poligono de Andalucia
Andalucia <- esp_get_ccaa(ccaa = "Andalucía")
andalucia_proj <- st_transform(Andalucia,crs_reference)
# Cargamos la muestra de puntos
load("data_cleaning/sample_2024-03-27.RData")
# Eliminamos las observaciones que no tienen fecha
sample <- na.omit(sample)[1:10,]
sample
source("D:/usuario/Documents/Universidad/5º/TFG - organizado/scripts/asignación_variables_a_localizaciones.R", echo=TRUE)
problems(dataset)
save(dataset,paste0("salidas_intermedias/dataset_completo",Sys.Date(),".RData"))
save(dataset,file = paste0("salidas_intermedias/dataset_completo",Sys.Date(),".RData"))
# Cargamos la muestra de puntos
load("salidas_intermedias/sample_2024-03-27.RData")
library(tidyverse)
library(tidymodels)
packageVersion("rlang") # ‘1.0.6’
devtools::install_github("r-lib/rlang")
devtools::install_github("r-lib/rlang")
remove(devtools)
remove("devtools)
""
)
wef
remove("devtools")
packageVersion("rlang") # ‘1.1.0.9000’
remove.packages(devtools)
remove.packages("devtools")
update.packages("rlang")
library(tidymodels)
pak:pgk_install("r-lib/rlang")
install.packages("pak")
pak:pgk_install("r-lib/rlang")
library(pak)
pak:pgk_install("r-lib/rlang")
pak:pgk_install("r-lib/rlang")
remove.packages(rlang)
remove.packages("rlang")
remove.packages("rlang")
install.packages("rlang")
install.packages("rlang")
package_version(rlang)
package_version("rlang")
library(tidymodels)
library(tidyverse)
# Librerías:
library(tidyverse)
load("salidas_intermedias/dataset_completo2024_03_27.RData")
load("salidas_intermedias/dataset_completo2024-03-27.RData")
str(dataset)
names(datos)
names(dataset)
cat(names(dataset))
summary(dataset)
library(sf)
summary(dataset)
year(dataset$date[1])
datos = dataset |>
select(-c(YEAR,MM,DD))
str(datos)
datos |> select(curvatura) |> summary()
summary(dataset)
summary(datos)
datos <- datos |>
mutate(fire = as.factor(fire),
enp = as.factor(enp),
uso_suelo = as.factor(uso_suelo))
summary(datos)
summary(datos$orientacion)
?cut
orientacion = cut(datos$orientacion,
breaks = c(-Inf,-1,22.5,67.5,112.5,157.5,202.5,247.5,292.5,337.5,360),
labels = c("Plano","N","NE","E","SE","S","SW","W","NW","N"))
summary(orientacion)
summary(datos)
datos = datos |>
mutate(cut(datos$orientacion,
breaks = c(-Inf,-1,22.5,67.5,112.5,157.5,202.5,247.5,292.5,337.5,360),
labels = c("Plano","N","NE","E","SE","S","SW","W","NW","N")))
summary(datos)
datos = dataset |>
select(-c(YEAR,MM,DD))
datos = dataset |>
select(-c(YEAR,MM,DD))
Se trata de un objeto de clase `sf` y `data.frame`:
Variables:
- fire: Variable respuesta con dos clases. Indica si en esa observación hay un incendio (1) o no (0).
- date: Fecha de la observación
- T2M: Temperatura del a 2m. The average air (dry bulb) temperature at 2 meters above the surface of the earth.
- GWETTOP: Surface Soil Wetness. The percent of soil moisture a value of 0 indicates a completely water-free soil and a value of 1 indicates a completely saturated soil; where surface is the layer from the surface 0 cm to 5 cm below grade.
- RH2M : Humedad relativa a 2m.The ratio of actual partial pressure of water vapor to the partial pressure at saturation, expressed in percent.
- WD10M: Wind Direction at 10m. The average of the wind direction at 10 meters above the surface of the earth (º).
- WS10M: Wind Speed at 10m. The average of wind speed at 10 meters above the surface of the earth (m/s).
- PRECTOTCORR: Precipitation Corrected.  The bias corrected average of total precipitation at the surface of the earth in water mass (includes water content in snow) (mm/day).
- elevacion: Elevación sobre el nivel del mar (m).
- pendiente: Pendiente del terreno (º).
- orientacion: Orientación de la pendiente descendiente medida en sentido de las agujas del reloj (º). Las áreas planas que no tienen dirección de pendiente descendente tienen un valor de -1.
https://desktop.arcgis.com/es/arcmap/latest/tools/spatial-analyst-toolbox/how-aspect-works.htm
- curvatura: Curvatura de la superfie ()
- dist_carretera:
- dist_poblacion:
- dist_electr:
- dist_ferocarril
- enp: Espacio Natural Protegido. Su valor es 1 si la observación se encuentra dentro de un espacio natural protegido o 0 en caso contrario.
- cod_municipio: Código del municipio en el que está la observación.
- municipio: Nombre del municipio en en el que está la observación.
- poblacion: Número de habitantes del municipio en el que se encuentra la observación en ese año.
- uso_suelo: Clasificación del uso del suelo.
- dist_rios: Distancia al río más próximo (m).
- NDVI: Índice de vegetación de diferencia normalizada.
- geometry: Geometría de la simple feature. En este caso, coordenadas del punto.
```{r}
summary(datos)
summary(datos)
datos <- datos |>
mutate(fire = as.factor(fire),
enp = as.factor(enp),
uso_suelo = as.factor(uso_suelo))
datos = datos |>
mutate(orientacion = cut(orientacion,
breaks = c(-Inf,-1,22.5,67.5,112.5,157.5,202.5,247.5,292.5,337.5,360),
labels = c("Plano","N","NE","E","SE","S","SW","W","NW","N")))
summary(datos)
table(fire,orientacion)
table(datos$fire,datis$orientacion)
table(datos$fire,datos$orientacion)
summary(datos)
datos(is.na(datos$elevacion))
datos[is.na(datos$elevacion)]
datos[is.na(datos$elevacion),]
datos |> filter(is.na(elevacion))
summary(datos)
summary(dataset)
datos |> filter(is.na(pendiente))
datos |> filter(is.na(pendiente)) |> plot()
datos |> filter(is.na(pendiente)) |> st_geometry() |> plot()
# Poligono de Andalucia
Andalucia <- esp_get_ccaa(ccaa = "Andalucía")
library(mapSpain)
# Poligono de Andalucia
Andalucia <- esp_get_ccaa(ccaa = "Andalucía")
andalucia_proj <- st_transform(Andalucia,crs_reference)
# CRS de referencia
pend <- rast("data_raw/topograficas/pendiente.tif")
crs_reference = crs(pend)
# CRS de referencia
pend <- rast("data_raw/topograficas/pendiente.tif")
# Cargamos las librerías
library(terra)
# CRS de referencia
pend <- rast("data_raw/topograficas/pendiente.tif")
crs_reference = crs(pend)
rm(pend)
# Poligono de Andalucia
Andalucia <- esp_get_ccaa(ccaa = "Andalucía")
andalucia_proj <- st_transform(Andalucia,crs_reference)
plot(andalucia_proj,reset=F)
plot(andalucia_proj$geometry,reset=F)
plot(st_geometry(andalucia_proj),reset=F)
plot(st_geometry(andalucia_proj),reset=F)
datos |> filter(is.na(pendiente)) |> st_geometry() |> plot()
plot(st_geometry(andalucia_proj),reset=F)
datos |> filter(is.na(pendiente)) |> st_geometry() |> plot(add=T)
pend <- rast("data_raw/topograficas/pendiente.tif")
plot(pend,add=T)
summary(datos)
plot(st_geometry(andalucia_proj),reset=F)
datos |>
filter(is.na(pendiente)| is.na(orientacion) | is.na(curvatura)) |>
st_geometry() |>
plot(add=T)
datos |>
filter(is.na(pendiente)| is.na(orientacion) | is.na(curvatura)) |>
st_geometry() |>
plot(pch=16,col="red",add=T)
# Variables topográficas --------------------------------------------------
elev <- rast("data_raw/topograficas/elevacion.tif")
plot(elev,add=T)
datos |>
filter(is.na(pendiente)| is.na(orientacion) | is.na(curvatura)) |>
summarise( st_geometry() |>
plot(pch=16,col="red",add=T))
datos |>
filter(is.na(pendiente)| is.na(orientacion) | is.na(curvatura)) |>
st_geometry() |>
plot(pch=16,col="red",add=T)
plot(st_geometry(andalucia_proj),reset=F)
datos |>
filter(is.na(pendiente)| is.na(orientacion) | is.na(curvatura)) |>
st_geometry() |>
plot(pch=16,col="red",add=T)
datos |>
filter(is.na(pendiente)| is.na(orientacion) | is.na(curvatura)) |> count()
datos |> st_drop_geometry() |>
filter(is.na(pendiente)| is.na(orientacion) | is.na(curvatura)) |> count()
summary(datos)
datos |>
filter(!(is.na(pendiente)| is.na(orientacion) | is.na(curvatura)))
datos = datos |>
filter(!(is.na(pendiente)| is.na(orientacion) | is.na(curvatura)))
summary(datos)
datos |>
filter(is.na(poblacion)) |>
select(year(date))
datos |>
filter(is.na(poblacion)) |>
mutate(Año = year(date)) |>
select(municipio, Año)
datos |>
filter(is.na(poblacion)) |>
mutate(Año = year(date)) |>
select(Año)
filter(is.na(poblacion)) |>
mutate(Año = year(date)) |>
select(Año)
datos |>
st_drop_geometry() |>
filter(is.na(poblacion)) |>
mutate(Año = year(date)) |>
select(Año)
datos |>
st_drop_geometry() |>
filter(is.na(poblacion)) |>
mutate(Año = year(date)) |>
select(Año,municipio)
datos |>
st_drop_geometry() |>
filter(is.na(poblacion)) |>
mutate(Año = year(date)) |>
select(Año,municipio,cod_municipio)
datos |>
arrange(desc(poblacion))
pob = read_csv2("D:/usuario/Documents/Universidad/5º/TFG - organizado/data_raw/antropologicas/Población/poblacion_municipios.txt")
pop
pob
pob = read_csv2("D:/usuario/Documents/Universidad/5º/TFG - organizado/data_raw/antropologicas/Población/poblacion_municipios.txt")[,c(1:5)]
pob
datos |>
st_drop_geometry() |>
filter(is.na(poblacion)) |>
mutate(Año = year(date)) |>
select(Año,municipio,cod_municipio)
names(pob)
pob |> filter(CODIGO_INE3 == "18077")
datos |> filter(is.na(uso_suelo))
plot(st_geometry(andalucia_proj),reset=F)
datos |> filter(is.na(uso_suelo)) |> st_geometry() |> plot()
plot(st_geometry(andalucia_proj),reset=F)
datos |> filter(is.na(uso_suelo)) |> st_geometry() |> plot(pch=16,col="red",add=T)
plot(st_geometry(andalucia_proj),reset=F)
datos |> filter(is.na(uso_suelo)) |> st_geometry() |> plot(pch=16,col="red",add=T)
datos = datos |>
filter(!is.na(uso_suelo))
summary(datos)
datos |>
mutate(mes = month(date),
año = year(date)) |>
group_by(mes,año) |>
transmute(NDVI_medio = mean(NDVI,na.rm=T))
datos |>
mutate(mes = month(date),
año = year(date)) |>
group_by(año) |>
transmute(NDVI_medio = mean(NDVI,na.rm=T))
datos |>
mutate(mes = month(date),
año = year(date)) |>
group_by(año) |>
summarise(NDVI_medio = mean(NDVI,na.rm=T))
datos |>
st_drop_geometry() |>
mutate(mes = month(date),
año = year(date)) |>
group_by(mes,año) |>
summarise(NDVI_medio = mean(NDVI,na.rm=T))
?mean
datos |>
st_drop_geometry() |>
mutate(mes = month(date),
año = year(date)) |>
group_by(mes,año) |>
summarise(NDVI_medio = mean(na.omit(NDVI)))
datos |>
st_drop_geometry() |>
mutate(mes = month(date),
año = year(date)) |>
group_by(año,mes) |>
summarise(NDVI_medio = mean(na.omit(NDVI)))
NDVI_mes = datos |>
st_drop_geometry() |>
mutate(mes = month(date),
año = year(date)) |>
group_by(año,mes) |>
summarise(NDVI_mes = mean(na.omit(NDVI)))
View(NDVI_mes)
NDVI_mes |>
ggplot(aes(y=NDVI_mes))
NDVI_mes |>
ggplot(aes(y=NDVI_mes)) |>
geom_line()
NDVI_mes |>
ggplot(aes(y=NDVI_mes)) +
geom_line()
NDVI_mes |>
ggplot(aes(y=NDVI_mes)) +
geom_bar()
NDVI_mes = datos |>
st_drop_geometry() |>
mutate(mes = month(date),
año = year(date)) |>
group_by(año,mes) |>
summarise(NDVI_mes = mean(na.omit(NDVI))) |>
mutate(id = 1:n())
NDVI_mes
NDVI_mes |>
ggplot(aes(x=id,y=NDVI_mes)) +
geom_bar()
NDVI_mes |>
ggplot(aes(x=id,y=NDVI_mes))
summary(NDVI_mes)
NDVI_mes
print(n=100)
print(NDVI_mes,n=100)
NDVI_mes = datos |>
st_drop_geometry() |>
mutate(mes = month(date),
año = year(date)) |>
group_by(año,mes) |>
summarise(NDVI_mes = mean(na.omit(NDVI))) |>
ungroup() |>
mutate(id = 1:n())
print(NDVI_mes,n=100)
NDVI_mes |>
ggplot(aes(x=id,y=NDVI_mes))
NDVI_mes |>
ggplot(aes(x=id,y=NDVI_mes)) +
geom_bar()
NDVI_mes |>
ggplot(aes(x=id,y=NDVI_mes)) +
geom_point()
NDVI_mes |>
ggplot(aes(x=id,y=NDVI_mes)) +
geom_line()
?xlab
paste0(NDVI_mes$año,NDVI_mes$mes)
paste0(NDVI_mes$año,NDVI_mes$mes,collapse = "-")
paste0(NDVI_mes$año,NDVI_mes$mes,sep = "-")
paste(NDVI_mes$año,NDVI_mes$mes,sep = "-")
NDVI_mes |>
ggplot(aes(x=id,y=NDVI_mes)) +
geom_line()+
xlab(paste(NDVI_mes$año,NDVI_mes$mes,sep = "-"))
paste(15,NDVI_mes$mes,NDVI_mes$año)
paste(15,NDVI_mes$mes,NDVI_mes$año,sep="/")
paste(01,NDVI_mes$mes,NDVI_mes$año,sep="/")
NDVI_mes = datos |>
st_drop_geometry() |>
mutate(mes = month(date),
año = year(date)) |>
group_by(año,mes) |>
summarise(NDVI_mes = mean(na.omit(NDVI))) |>
ungroup() |>
mutate(date = dmy(paste(01,NDVI_mes$mes,NDVI_mes$año,sep="/")))
NDVI_mes = datos |>
st_drop_geometry() |>
mutate(mes = month(date),
año = year(date)) |>
group_by(año,mes) |>
summarise(NDVI_mes = mean(na.omit(NDVI))) |>
ungroup() |>
mutate(date = dmy(paste(01,mes,año,sep="/")))
NDVI_mes
NDVI_mes |>
ggplot(aes(x=date,y=NDVI_mes)) +
geom_line()+
scale_x_date()
NDVI_mes |>
ggplot(aes(x=date,y=NDVI_mes)) +
geom_line()+
scale_x_date(date_labels = "%b")
NDVI_mes |>
ggplot(aes(x=date,y=NDVI_mes)) +
geom_line()+
scale_x_date(date_breaks = "1 month",date_labels = "%b")
NDVI_mes |>
ggplot(aes(x=date,y=NDVI_mes)) +
geom_line()+
scale_x_date(date_breaks = "3 month",date_labels = "%b")
NDVI_mes |>
ggplot(aes(x=date,y=NDVI_mes)) +
geom_line()+
scale_x_date(date_breaks = "6 month",date_labels = "%b")
NDVI_mes |>
ggplot(aes(x=date,y=NDVI_mes)) +
geom_line()+
scale_x_date(date_breaks = "10 month",date_labels = "%b")
NDVI_mes |>
ggplot(aes(x=date,y=NDVI_mes)) +
geom_line()+
scale_x_date(date_breaks = "10 month",date_labels = "%b")+
theme(axis.text.x = element_text(angle = 90))
NDVI_mes |>
ggplot(aes(x=date,y=NDVI_mes)) +
geom_line()+
scale_x_date(date_breaks = "6 month",date_labels = "%b")+
theme(axis.text.x = element_text(angle = 90))
NDVI_mes |>
ggplot(aes(x=date,y=NDVI_mes)) +
geom_line()+
scale_x_date(date_breaks = "6 month",date_labels = "%y")+
theme(axis.text.x = element_text(angle = 90))
NDVI_mes |>
ggplot(aes(x=date,y=NDVI_mes)) +
geom_line()+
scale_x_date(date_breaks = "6 month",date_labels = "%b %y")+
theme(axis.text.x = element_text(angle = 90))
NDVI_mes |>
ggplot(aes(x=date,y=NDVI_mes)) +
geom_line()+
scale_x_date(date_breaks = "6 month",date_labels = "%y%b")+
theme(axis.text.x = element_text(angle = 90))
